{
    "openapi": "3.0.0",
    "info": {
        "title": "Event Management API",
        "description": "API for managing events and attendees",
        "contact": {
            "email": "support@example.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "Local Development Server"
        }
    ],
    "paths": {
        "/events/{event}/attendees": {
            "get": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Get event attendees",
                "description": "Returns all attendees for a specific event",
                "operationId": "e510db7416f7fe46b49d1a179dbc415d",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Attendee"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Register for event",
                "description": "Register the authenticated user as an attendee for an event",
                "operationId": "c14dbe15129beb46eb6632eec4310ab0",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attendee"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Already registered for this event"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events/{event}/attendees/{attendee}": {
            "delete": {
                "tags": [
                    "Attendees"
                ],
                "summary": "Cancel event registration",
                "description": "Cancel the authenticated user's attendance for an event",
                "operationId": "da02a96a36450e01761edbe885210143",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "attendee",
                        "in": "path",
                        "description": "Attendee ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successfully cancelled registration"
                    },
                    "403": {
                        "description": "Not authorized to cancel this registration"
                    },
                    "404": {
                        "description": "Event or attendee not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get all events",
                "description": "Returns list of all events with creator and attendee counts",
                "operationId": "3befe2e8582683a8dc70f7b706a5a97d",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Event"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "description": "Creates a new event for the authenticated user",
                "operationId": "1ed79d9ab6d41b87387cad6237213e5d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "start_time"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Laravel Conference 2025"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Annual Laravel developer conference",
                                        "nullable": true
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-01 09:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-01 17:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Get a single event",
                "description": "Returns detailed information about a specific event",
                "operationId": "abf4f4bbfe75221b5bab720a701f17b8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Events"
                ],
                "summary": "Update an event",
                "description": "Updates an event (only by creator)",
                "operationId": "ca1f19a988fe9b1ee4af2f4ff3e724fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Event Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description",
                                        "nullable": true
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-01 10:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-12-01 18:00:00",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Event updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Not authorized to update this event"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Events"
                ],
                "summary": "Delete an event",
                "description": "Deletes an event (only by creator)",
                "operationId": "54be98df9381a8b89013d29e170a31fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Event deleted successfully"
                    },
                    "403": {
                        "description": "Not authorized to delete this event"
                    },
                    "404": {
                        "description": "Event not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and create session",
                "operationId": "42f77e072dec84b0e1094cca1228298e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "Login successful"
                    },
                    "422": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Destroy authenticated session",
                "operationId": "03afb12b342c2ea43bdc1de4f39e91a8",
                "responses": {
                    "204": {
                        "description": "Logout successful"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/email/verification-notification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend verification email",
                "description": "Send a new email verification notification",
                "operationId": "7c01a354a5960445207bc5d2f17d547e",
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "verification-link-sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "302": {
                        "description": "Email already verified, redirects to dashboard"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token from email",
                "operationId": "24b1c68468bf984b8806908f211f3827",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "reset-token-from-email"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Your password has been reset!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or invalid token"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request password reset",
                "description": "Send password reset link to user's email",
                "operationId": "888e4aa5b202b170b9fe831da90048c6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "We have emailed your password reset link!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account",
                "operationId": "573de1fed352c1205a32c4d1b9877375",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "User registered successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/verify-email/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email address",
                "description": "Verify user's email address using signed URL from email",
                "operationId": "9259c8d59d0ff37e9eb7677b82731d49",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Verification hash",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirects to frontend with verification status"
                    },
                    "403": {
                        "description": "Invalid verification link"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attendee": {
                "title": "Attendee",
                "description": "Attendee model representing event registration",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "event_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-31 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-31 10:00:00"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Event": {
                "title": "Event",
                "description": "Event model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Laravel Conference 2025"
                    },
                    "description": {
                        "type": "string",
                        "example": "Annual Laravel developer conference",
                        "nullable": true
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-12-01 09:00:00"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-12-01 17:00:00",
                        "nullable": true
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-31 10:00:00"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-10-31 10:00:00"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "attendees": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attendee"
                        }
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token as: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Attendees",
            "description": "Attendees"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}